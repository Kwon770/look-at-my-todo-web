[{"/Users/chan/code/js/lookatmytodo-web/src/components/App.js":"1","/Users/chan/code/js/lookatmytodo-web/src/components/Router.js":"2","/Users/chan/code/js/lookatmytodo-web/src/components/TodoSimpleEditContent.js":"3","/Users/chan/code/js/lookatmytodo-web/src/components/TodoCreation.js":"4","/Users/chan/code/js/lookatmytodo-web/src/components/TodoFactory.js":"5","/Users/chan/code/js/lookatmytodo-web/src/components/Todo.js":"6","/Users/chan/code/js/lookatmytodo-web/src/routes/Home.js":"7","/Users/chan/code/js/lookatmytodo-web/src/GetDate.js":"8","/Users/chan/code/js/lookatmytodo-web/src/components/TodoDetailPanel.js":"9","/Users/chan/code/js/lookatmytodo-web/src/components/TodoCounter.js":"10","/Users/chan/code/js/lookatmytodo-web/src/hooks/useInput.js":"11","/Users/chan/code/js/lookatmytodo-web/src/components/TodoMenuWrapper.js":"12"},{"size":553,"mtime":1610074264975,"results":"13","hashOfConfig":"14"},{"size":462,"mtime":1610613354660,"results":"15","hashOfConfig":"14"},{"size":2681,"mtime":1610937450539,"results":"16","hashOfConfig":"14"},{"size":473,"mtime":1610937780015,"results":"17","hashOfConfig":"14"},{"size":2255,"mtime":1611680302051,"results":"18","hashOfConfig":"14"},{"size":3433,"mtime":1611679689656,"results":"19","hashOfConfig":"14"},{"size":4144,"mtime":1611680355987,"results":"20","hashOfConfig":"14"},{"size":554,"mtime":1610943350869,"results":"21","hashOfConfig":"14"},{"size":5440,"mtime":1611680373619,"results":"22","hashOfConfig":"14"},{"size":1255,"mtime":1611680678244,"results":"23","hashOfConfig":"14"},{"size":319,"mtime":1610606870077,"results":"24","hashOfConfig":"14"},{"size":792,"mtime":1610607070444,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"cycftj",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chan/code/js/lookatmytodo-web/src/components/App.js",["54"],"import React, { useEffect, useState } from \"react\";\nimport Router from \"components/Router\";\nimport { ThemeProvider } from \"styled-components\";\nimport Theme from \"style/Theme\";\nimport GlobalStyles from \"style/GlobalStyles\";\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n\n  useEffect(() => {\n    // check whether the user is Log in\n    // setIsLogin()\n  });\n\n  return (\n    <>\n      <ThemeProvider theme={Theme}>\n        <Router isLogin={isLogin} />\n        <GlobalStyles />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n",["55","56"],"/Users/chan/code/js/lookatmytodo-web/src/components/Router.js",[],"/Users/chan/code/js/lookatmytodo-web/src/components/TodoSimpleEditContent.js",["57"],"import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport onClickOutside from \"react-onclickoutside\";\nimport useInput from \"hooks/useInput\";\n\nfunction TodoSimpleEditContent({ todo, setSimpleEditMode, onTodoChanged }) {\n  TodoSimpleEditContent.handleClickOutside = () => setSimpleEditMode(false);\n  const titleInputRef = useRef();\n  useEffect(() => {\n    titleInputRef.current.focus();\n  }, []);\n\n  const title = useInput(todo.title);\n  const closingDate = useInput(todo.closingDate);\n  const closingTime = useInput(todo.closingTime);\n  const priority = useInput(todo.priority);\n\n  // Update Todo immediately\n  useEffect(() => updateTodo(), [\n    title.value,\n    closingDate.value,\n    closingTime.value,\n    priority.value,\n  ]);\n\n  const updateTodo = () => {\n    const newTodo = {\n      ...todo,\n      title: title.value,\n      closingDate: closingDate.value,\n      closingTime: closingTime.value,\n      priority: priority.value,\n      repetitionType: todo.repetitionType,\n      specialRepetition: todo.specialRepetition,\n    };\n    onTodoChanged(newTodo);\n  };\n\n  return (\n    <div>\n      <Input title ref={titleInputRef} {...title} />\n      <SimpleEditBoxWrapper>\n        <SimpleEditBox>\n          <SimpleEditInput type=\"date\" {...closingDate} />\n        </SimpleEditBox>\n        <SimpleEditBox>\n          <SimpleEditInput type=\"time\" {...closingTime} />\n        </SimpleEditBox>\n        <SimpleEditBox>\n          <SimpleEditInput type=\"number\" style={{ width: 35 }} {...priority} />\n        </SimpleEditBox>\n      </SimpleEditBoxWrapper>\n    </div>\n  );\n}\n\nconst SimpleEditInput = styled.input`\n  width: 100%;\n  border: 0px;\n  background-color: ${(props) => props.theme.panelBg2Color};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst SimpleEditBox = styled.div`\n  ${(props) => props.theme.RowCenterAlignment}\n  border-radius: 4px;\n  padding: 3px 5px;\n  background-color: ${(props) => props.theme.panelBg2Color};\n  color: ${(props) => props.theme.panelFont2Color};\n  font-size: 12px;\n  margin-top: 7px;\n  margin-right: 7px;\n`;\n\nconst SimpleEditBoxWrapper = styled.div`\n  ${(props) => props.theme.RowCenterAlignment}\n`;\n\nconst Input = styled.input`\n  ${(props) => props.theme.TodoInput};\n  color: ${(props) => (props.title ? \"\" : props.theme.panelFont2Color)};\n  background-color: ${(props) =>\n    props.title ? \"\" : props.theme.panelBg2Color};\n  font-size: ${(props) => (props.title ? \"\" : \"13px\")};\n  cursor: ${(props) => (props.title ? \"text\" : \"pointer\")};\n`;\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => TodoSimpleEditContent.handleClickOutside,\n};\nexport default onClickOutside(TodoSimpleEditContent, clickOutsideConfig);\n","/Users/chan/code/js/lookatmytodo-web/src/components/TodoCreation.js",["58"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport onClickOutside from \"react-onclickoutside\";\n\nfunction TodoCreation({ setIsCreationClicked }) {\n  TodoCreation.handleClickOutside = () => setIsCreationClicked(false);\n\n  return <div></div>;\n}\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => TodoCreation.handleClickOutside,\n};\nexport default onClickOutside(TodoCreation, clickOutsideConfig);\n","/Users/chan/code/js/lookatmytodo-web/src/components/TodoFactory.js",["59","60"],"/Users/chan/code/js/lookatmytodo-web/src/components/Todo.js",[],"/Users/chan/code/js/lookatmytodo-web/src/routes/Home.js",["61"],"/Users/chan/code/js/lookatmytodo-web/src/GetDate.js",[],"/Users/chan/code/js/lookatmytodo-web/src/components/TodoDetailPanel.js",["62","63"],"/Users/chan/code/js/lookatmytodo-web/src/components/TodoCounter.js",[],"/Users/chan/code/js/lookatmytodo-web/src/hooks/useInput.js",[],"/Users/chan/code/js/lookatmytodo-web/src/components/TodoMenuWrapper.js",[],{"ruleId":"64","severity":1,"message":"65","line":8,"column":19,"nodeType":"66","messageId":"67","endLine":8,"endColumn":29},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":19,"column":33,"nodeType":"74","endLine":24,"endColumn":4,"suggestions":"75"},{"ruleId":"64","severity":1,"message":"76","line":11,"column":7,"nodeType":"66","messageId":"67","endLine":11,"endColumn":16},{"ruleId":"64","severity":1,"message":"77","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"78","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":20},{"ruleId":"72","severity":1,"message":"79","line":68,"column":6,"nodeType":"74","endLine":68,"endColumn":16,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"73","line":23,"column":33,"nodeType":"74","endLine":30,"endColumn":4,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":63,"column":6,"nodeType":"74","endLine":63,"endColumn":22,"suggestions":"83"},"no-unused-vars","'setIsLogin' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateTodo'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'Container' is assigned a value but never used.","'useEffect' is defined but never used.","'TodoCreation' is defined but never used.","React Hook useEffect has a missing dependency: 'onChangeCompletion'. Either include it or remove the dependency array.",["87"],["88"],"React Hook useEffect has missing dependencies: 'clickedTodo.closingDate', 'clickedTodo.closingTime', 'clickedTodo.priority', 'clickedTodo.title', 'closingDate', 'closingTime', 'existClosingDate', 'existClosingTime', 'priority', and 'title'. Either include them or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [title.value, closingDate.value, closingTime.value, priority.value, updateTodo]",{"range":"98","text":"99"},"Update the dependencies array to be: [onChangeCompletion, todoList]",{"range":"100","text":"101"},"Update the dependencies array to be: [title.value, existClosingDate.checked, closingDate.value, existClosingTime.checked, closingTime.value, priority.value, updateTodo]",{"range":"102","text":"103"},"Update the dependencies array to be: [clickedTodo.closingDate, clickedTodo.closingTime, clickedTodo.id, clickedTodo.priority, clickedTodo.title, closingDate, closingTime, existClosingDate, existClosingTime, priority, title]",{"range":"104","text":"105"},[679,767],"[title.value, closingDate.value, closingTime.value, priority.value, updateTodo]",[1605,1615],"[onChangeCompletion, todoList]",[936,1084],"[title.value, existClosingDate.checked, closingDate.value, existClosingTime.checked, closingTime.value, priority.value, updateTodo]",[2050,2066],"[clickedTodo.closingDate, clickedTodo.closingTime, clickedTodo.id, clickedTodo.priority, clickedTodo.title, closingDate, closingTime, existClosingDate, existClosingTime, priority, title]"]